/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package phonebook;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class SearchContact extends javax.swing.JFrame {
    ArrayList<Contact> list = ContactListSingelton.getInstance().getArray();
    private Contact tempContact=new Contact();
    /**
     * Creates new form SearchContact
     */
    public SearchContact() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbSearch = new javax.swing.JButton();
        fnSearch = new javax.swing.JTextField();
        jLContactInformation = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        jLLastName = new javax.swing.JLabel();
        jLEmail = new javax.swing.JLabel();
        jLAddress = new javax.swing.JLabel();
        jLGender = new javax.swing.JLabel();
        jLContactType = new javax.swing.JLabel();
        jLPhoneNumber = new javax.swing.JLabel();
        tfNumber = new javax.swing.JTextField();
        tfContactType = new javax.swing.JTextField();
        tfGender = new javax.swing.JTextField();
        tfAddress = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        tfLastName = new javax.swing.JTextField();
        jLSearchContact = new javax.swing.JLabel();
        jbUpdate = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLContactInfo = new javax.swing.JLabel();
        jBHomePage = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLExitSign = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLMinimizeSign = new javax.swing.JLabel();
        jLInfoSign = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 500));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jbSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbSearch.setText("Search");
        jbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSearchActionPerformed(evt);
            }
        });

        jLContactInformation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLContactInformation.setForeground(new java.awt.Color(204, 255, 255));
        jLContactInformation.setText("First Name");

        jLLastName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLLastName.setForeground(new java.awt.Color(204, 255, 255));
        jLLastName.setText("Last Name");

        jLEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLEmail.setForeground(new java.awt.Color(204, 255, 255));
        jLEmail.setText("Email");

        jLAddress.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLAddress.setForeground(new java.awt.Color(204, 255, 255));
        jLAddress.setText("Address");

        jLGender.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLGender.setForeground(new java.awt.Color(204, 255, 255));
        jLGender.setText("Gender");

        jLContactType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLContactType.setForeground(new java.awt.Color(204, 255, 255));
        jLContactType.setText("Contact Type");

        jLPhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLPhoneNumber.setForeground(new java.awt.Color(204, 255, 255));
        jLPhoneNumber.setText("Phone Number");

        tfNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLSearchContact.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLSearchContact.setForeground(new java.awt.Color(255, 153, 0));
        jLSearchContact.setText("Search Contact");

        jbUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbUpdate.setText("Update");
        jbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateActionPerformed(evt);
            }
        });

        jbDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbDelete.setText("Delete");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Phone Number", "Address", "Gender", "Email", "Contact Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLContactInfo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLContactInfo.setForeground(new java.awt.Color(255, 153, 0));
        jLContactInfo.setText("Contact Information");

        jBHomePage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBHomePage.setText("Home Page");
        jBHomePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHomePageActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setForeground(new java.awt.Color(102, 102, 102));
        jPanel3.setPreferredSize(new java.awt.Dimension(15, 25));

        jLExitSign.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLExitSign.setForeground(new java.awt.Color(153, 255, 255));
        jLExitSign.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLExitSign.setText("x");
        jLExitSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLExitSignMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLExitSignMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLExitSignMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLExitSign, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLExitSign, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));
        jPanel4.setAlignmentX(0.1F);
        jPanel4.setAlignmentY(0.1F);
        jPanel4.setPreferredSize(new java.awt.Dimension(32, 33));

        jLMinimizeSign.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLMinimizeSign.setForeground(new java.awt.Color(153, 255, 255));
        jLMinimizeSign.setText("_");
        jLMinimizeSign.setAlignmentX(0.1F);
        jLMinimizeSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLMinimizeSignMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLMinimizeSignMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLMinimizeSignMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLMinimizeSign, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLMinimizeSign)
        );

        jLInfoSign.setIcon(new javax.swing.ImageIcon(getClass().getResource("/phonebook/info.png"))); // NOI18N
        jLInfoSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLInfoSignMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBHomePage)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfNumber))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLContactType, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                                    .addComponent(tfContactType, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLContactInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLGender, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfGender, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLContactInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(253, 253, 253)
                                .addComponent(jLSearchContact, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                                .addComponent(jLInfoSign)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbSearch)
                                .addGap(135, 135, 135))))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(938, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(913, 913, 913)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(39, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLSearchContact, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jbSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLContactInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLInfoSign)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLContactInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLGender, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLContactType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfContactType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbUpdate)
                        .addComponent(jbDelete))
                    .addComponent(jBHomePage, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(467, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(467, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        xx = evt.getX();
        yy = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx, y-yy);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jLMinimizeSignMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLMinimizeSignMouseExited
        resetColor(jPanel4);
    }//GEN-LAST:event_jLMinimizeSignMouseExited

    private void jLMinimizeSignMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLMinimizeSignMouseEntered
        setColor(jPanel4);
    }//GEN-LAST:event_jLMinimizeSignMouseEntered

    private void jLMinimizeSignMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLMinimizeSignMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLMinimizeSignMouseClicked

    private void jLExitSignMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLExitSignMouseExited
        resetColor(jPanel3);
    }//GEN-LAST:event_jLExitSignMouseExited

    private void jLExitSignMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLExitSignMouseEntered
        setColor(jPanel3);
    }//GEN-LAST:event_jLExitSignMouseEntered

    private void jLExitSignMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLExitSignMouseClicked
        this.setVisible(false);
        new First().setVisible(true);
    }//GEN-LAST:event_jLExitSignMouseClicked

    private void jBHomePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHomePageActionPerformed
        this.setVisible(false);
        new First().setVisible(true);
    }//GEN-LAST:event_jBHomePageActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //import chosen all contact info to the fields on the sidebar
        int row = jTable1.getSelectedRow();
        tfFirstName.setText(jTable1.getModel().getValueAt(row, 0).toString());
        tfLastName.setText(jTable1.getModel().getValueAt(row, 1).toString());
        tfNumber.setText(jTable1.getModel().getValueAt(row, 2).toString());
        tfAddress.setText(jTable1.getModel().getValueAt(row, 3).toString());
        tfGender.setText(jTable1.getModel().getValueAt(row, 4).toString());
        tfEmail.setText(jTable1.getModel().getValueAt(row, 5).toString());
        tfContactType.setText(jTable1.getModel().getValueAt(row, 6).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        //delete chosen contact from the table and from the contacts array 
        DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
        ImageIcon icon = new ImageIcon(getClass().getResource("phoneIcon.png"));
        int row= -1;
        row = jTable1.getSelectedRow();
        if(row!= -1)
        {
            Contact contactToRemove = new Contact();
            contactToRemove.setFirstName(jTable1.getModel().getValueAt(row, 0).toString());
            contactToRemove.setLastName(jTable1.getModel().getValueAt(row, 1).toString());
            contactToRemove.setPhoneNumber(jTable1.getModel().getValueAt(row, 2).toString());
            contactToRemove.setAddress(jTable1.getModel().getValueAt(row, 3).toString());
            contactToRemove.setSex(jTable1.getModel().getValueAt(row, 4).toString());
            contactToRemove.setEmailAddress(jTable1.getModel().getValueAt(row, 5).toString());
            contactToRemove.setContactType(jTable1.getModel().getValueAt(row, 6).toString());
            Contact new_contact=new Contact(contactToRemove.getFirstName(),contactToRemove.getLastName(),contactToRemove.getPhoneNumber(),contactToRemove.getAddress(),contactToRemove.getSex(),contactToRemove.getEmailAddress(),contactToRemove.getContactType());
            int check = JOptionPane.showConfirmDialog(null, "You have choosen to DELETE a contact, are you sure?","Delete Contact",JOptionPane.YES_NO_OPTION);
            if (check == 0)
            {

                model.removeRow(row);
                for(int i=0;i<list.size();i++)
                {
                    if(list.get(i).getPhoneNumber().equals(new_contact.getPhoneNumber()))
                    list.remove(i);
                }
                tfFirstName.setText(null);
                tfLastName.setText(null);
                tfNumber.setText(null);
                tfAddress.setText(null);
                tfGender.setText(null);
                tfEmail.setText(null);
                tfContactType.setText(null);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Thank you for not deleting","Deletion canceled",JOptionPane.INFORMATION_MESSAGE,icon);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Error! you must choose a contact from the table","Error",JOptionPane.INFORMATION_MESSAGE,icon);
        }
    }//GEN-LAST:event_jbDeleteActionPerformed

    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateActionPerformed
        //update contact info in the table and in the contact array
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        ImageIcon icon = new ImageIcon(getClass().getResource("phoneIcon.png"));
        int checkNumber=0;
        boolean checkPhone;
        int row= -1;
        row = jTable1.getSelectedRow();
        if(row!= -1) //if row was chosen
        {
            int check = JOptionPane.showConfirmDialog(null, "You have choosen to Update a contact, are you sure?","Update Contact",JOptionPane.YES_NO_OPTION);

            if(tfGender.getText().equalsIgnoreCase("male")|| tfGender.getText().equalsIgnoreCase("female")) //validate gender type
            {
                if(tfContactType.getText().equalsIgnoreCase("personal") || tfContactType.getText().equalsIgnoreCase("work")) //validate contact type
                {
                    if(!tfEmail.getText().isEmpty() && tfEmail.getText().contains("@") || tfEmail.getText().isEmpty()) //validate email
                    {
                        if(check == 0)
                        {
                            if(tfNumber.getText().toString().equals(jTable1.getModel().getValueAt(row, 2).toString()))//if the phone number stays the same
                            {
                                for(Contact list1 : list)
                                {
                                    if(list1.getPhoneNumber().equals(tfNumber.getText().toString())) //if the phone number was found in the contact array, updates the new variables to the contact info
                                    {
                                        list1.setFirstName(tfFirstName.getText());
                                        list1.setLastName(tfLastName.getText());
                                        list1.setAddress(tfAddress.getText());
                                        list1.setSex(tfGender.getText());
                                        list1.setContactType(tfContactType.getText());
                                        list1.setEmailAddress(tfEmail.getText());
                                        model.removeRow(row);
                                        model.addRow(new Object[]{list1.getFirstName(),list1.getLastName(),list1.getPhoneNumber(),list1.getAddress(),list1.getSex(),list1.getEmailAddress(),list1.getContactType()});
                                        JOptionPane.showMessageDialog(null, "Contact has been updated","Contact Updated",JOptionPane.INFORMATION_MESSAGE,icon);
                                        break;
                                    }
                                }
                            }
                            else //if the phone number is changed
                            {
                                String PhoneNumber = tfNumber.getText();
                                checkPhone = new PhoneNumberValidation().validate(PhoneNumber);//checks if new phone number is valid
                                if (checkPhone == true)
                                {
                                    for(Contact list1 : list)  //checks if the new number exists in the list
                                    {
                                        if(list1.getPhoneNumber().equals(tfNumber.getText()))
                                        {
                                            JOptionPane.showMessageDialog(null, "This Number already exists","Error",JOptionPane.INFORMATION_MESSAGE,icon);
                                            checkNumber=1;
                                            break;
                                        }
                                    }
                                    if(checkNumber==0)  //updates the selected contact
                                    {
                                        for(Contact list1 : list)
                                        {
                                            if(list1.getPhoneNumber().equals(jTable1.getModel().getValueAt(row, 2).toString()))
                                            {
                                                list1.setFirstName(tfFirstName.getText());
                                                list1.setLastName(tfLastName.getText());
                                                list1.setAddress(tfAddress.getText());
                                                list1.setSex(tfGender.getText());
                                                list1.setContactType(tfContactType.getText());
                                                list1.setEmailAddress(tfEmail.getText());
                                                list1.setPhoneNumber(tfNumber.getText());
                                                model.removeRow(row);
                                                model.addRow(new Object[]{list1.getFirstName(),list1.getLastName(),list1.getPhoneNumber(),list1.getAddress(),list1.getSex(),list1.getEmailAddress(),list1.getContactType()});
                                                JOptionPane.showMessageDialog(null, "Contact has been updated","Contact Updated",JOptionPane.INFORMATION_MESSAGE,icon);
                                                break;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, "Invalid Phone Number","Error",JOptionPane.INFORMATION_MESSAGE,icon);
                                }
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "I guess you have changed your mind","Deletion Canceled",JOptionPane.INFORMATION_MESSAGE,icon);
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"Invalid Email, please try again","Error",JOptionPane.INFORMATION_MESSAGE,icon);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Invalid contact type! you must write work or personal","Error",JOptionPane.INFORMATION_MESSAGE,icon);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Invalid Gender! you must write male or female","Error",JOptionPane.INFORMATION_MESSAGE,icon);
            }
        }
        else //if no contact was chosen from the table
        {
            JOptionPane.showMessageDialog(null, "Error! you must choose a contact from the table","Error",JOptionPane.INFORMATION_MESSAGE,icon);
            tfFirstName.setText(null);
            tfLastName.setText(null);
            tfAddress.setText(null);
            tfGender.setText(null);
            tfContactType.setText(null);
            tfEmail.setText(null);
            tfNumber.setText(null);
        }
    }//GEN-LAST:event_jbUpdateActionPerformed

    private void jbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSearchActionPerformed
        //search for a contact from the contacts array, by first name, last name,phone number or partial string
        int checkExist = 0;
        ImageIcon icon = new ImageIcon(getClass().getResource("phoneIcon.png"));
        String name = fnSearch.getText();
        jTable1.setModel(new DefaultTableModel (null,new Object[]{"First Name","Last Name","Phone Number","Address","Gender","Email","Contact Type"}));
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        Collections.sort(list, Contact.FirstNameComparator);
        for (Contact list1 : list)
        {
            if(list1.getFirstName().toLowerCase().contains(name.toLowerCase())|| list1.getLastName().toLowerCase().contains(name.toLowerCase())||list1.getPhoneNumber().contains(name.toLowerCase()))
            {
                tempContact = list1;
                model.addRow(new Object[]{tempContact.getFirstName(),tempContact.getLastName(),tempContact.getPhoneNumber(),tempContact.getAddress(),tempContact.getSex(),tempContact.getEmailAddress(),tempContact.getContactType()});
                checkExist = 1;
            }
        }
        if(checkExist==0)
        {
            JOptionPane.showMessageDialog(null, "Sorry,there is no contact who matches your search","Error",JOptionPane.INFORMATION_MESSAGE,icon);
        }

    }//GEN-LAST:event_jbSearchActionPerformed

    private void jLInfoSignMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLInfoSignMouseClicked
        // infoSign explanation for using the search bar
        ImageIcon icon = new ImageIcon(getClass().getResource("phoneIcon.png"));
        JOptionPane.showMessageDialog(null, "For search you can enter one of these choises : "
                + "\n First Name \n Last Name \n Phone Number \n OR push search button to View all contacts","Info",JOptionPane.INFORMATION_MESSAGE,icon);
    }//GEN-LAST:event_jLInfoSignMouseClicked

    public void setColor(JPanel p)
        {
            p.setBackground(new Color(255,0,0));
        }
    public void resetColor(JPanel p1)
        {
            p1.setBackground(new Color(102,102,102));
        }
    static int xx,yy;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchContact().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fnSearch;
    private javax.swing.JButton jBHomePage;
    private javax.swing.JLabel jLAddress;
    private javax.swing.JLabel jLContactInfo;
    private javax.swing.JLabel jLContactInformation;
    private javax.swing.JLabel jLContactType;
    private javax.swing.JLabel jLEmail;
    private javax.swing.JLabel jLExitSign;
    private javax.swing.JLabel jLGender;
    private javax.swing.JLabel jLInfoSign;
    private javax.swing.JLabel jLLastName;
    private javax.swing.JLabel jLMinimizeSign;
    private javax.swing.JLabel jLPhoneNumber;
    private javax.swing.JLabel jLSearchContact;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbSearch;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfContactType;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfGender;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfNumber;
    // End of variables declaration//GEN-END:variables

private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Phone.png")));
    }
}